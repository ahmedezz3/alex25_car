
motors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000294  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000308  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000949  00000000  00000000  000003cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068b  00000000  00000000  00000d15  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c8  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000377  00000000  00000000  00001928  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000030f  00000000  00000000  00001c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001fae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_13>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 24 01 	call	0x248	; 0x248 <main>
  74:	0c 94 48 01 	jmp	0x290	; 0x290 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <LCD_cmd>:
  7c:	88 bb       	out	0x18, r24	; 24
  7e:	8b b3       	in	r24, 0x1b	; 27
  80:	8f 7e       	andi	r24, 0xEF	; 239
  82:	8b bb       	out	0x1b, r24	; 27
  84:	8b b3       	in	r24, 0x1b	; 27
  86:	8f 7d       	andi	r24, 0xDF	; 223
  88:	8b bb       	out	0x1b, r24	; 27
  8a:	8b b3       	in	r24, 0x1b	; 27
  8c:	80 64       	ori	r24, 0x40	; 64
  8e:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	8f e3       	ldi	r24, 0x3F	; 63
  92:	9f e1       	ldi	r25, 0x1F	; 31
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <LCD_cmd+0x18>
  98:	00 c0       	rjmp	.+0      	; 0x9a <LCD_cmd+0x1e>
  9a:	00 00       	nop
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8f 7b       	andi	r24, 0xBF	; 191
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	08 95       	ret

000000a4 <init_LCD>:
  a4:	88 e3       	ldi	r24, 0x38	; 56
  a6:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_cmd>
  aa:	8f e9       	ldi	r24, 0x9F	; 159
  ac:	9f e0       	ldi	r25, 0x0F	; 15
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <init_LCD+0xa>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <init_LCD+0x10>
  b4:	00 00       	nop
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_cmd>
  bc:	8f e9       	ldi	r24, 0x9F	; 159
  be:	9f e0       	ldi	r25, 0x0F	; 15
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <init_LCD+0x1c>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <init_LCD+0x22>
  c6:	00 00       	nop
  c8:	82 e0       	ldi	r24, 0x02	; 2
  ca:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_cmd>
  ce:	8f e9       	ldi	r24, 0x9F	; 159
  d0:	9f e0       	ldi	r25, 0x0F	; 15
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <init_LCD+0x2e>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <init_LCD+0x34>
  d8:	00 00       	nop
  da:	86 e0       	ldi	r24, 0x06	; 6
  dc:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_cmd>
  e0:	8f e9       	ldi	r24, 0x9F	; 159
  e2:	9f e0       	ldi	r25, 0x0F	; 15
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <init_LCD+0x40>
  e8:	00 c0       	rjmp	.+0      	; 0xea <init_LCD+0x46>
  ea:	00 00       	nop
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	0e 94 3e 00 	call	0x7c	; 0x7c <LCD_cmd>
  f2:	8f e9       	ldi	r24, 0x9F	; 159
  f4:	9f e0       	ldi	r25, 0x0F	; 15
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <init_LCD+0x52>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <init_LCD+0x58>
  fc:	00 00       	nop
  fe:	08 95       	ret

00000100 <LCD_write>:
 100:	88 bb       	out	0x18, r24	; 24
 102:	8b b3       	in	r24, 0x1b	; 27
 104:	80 61       	ori	r24, 0x10	; 16
 106:	8b bb       	out	0x1b, r24	; 27
 108:	8b b3       	in	r24, 0x1b	; 27
 10a:	8f 7d       	andi	r24, 0xDF	; 223
 10c:	8b bb       	out	0x1b, r24	; 27
 10e:	8b b3       	in	r24, 0x1b	; 27
 110:	80 64       	ori	r24, 0x40	; 64
 112:	8b bb       	out	0x1b, r24	; 27
 114:	8f e3       	ldi	r24, 0x3F	; 63
 116:	9f e1       	ldi	r25, 0x1F	; 31
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <LCD_write+0x18>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <LCD_write+0x1e>
 11e:	00 00       	nop
 120:	8b b3       	in	r24, 0x1b	; 27
 122:	8f 7b       	andi	r24, 0xBF	; 191
 124:	8b bb       	out	0x1b, r24	; 27
 126:	08 95       	ret

00000128 <__vector_13>:
 128:	1f 92       	push	r1
 12a:	0f 92       	push	r0
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	0f 92       	push	r0
 130:	11 24       	eor	r1, r1
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
 14a:	8c b1       	in	r24, 0x0c	; 12
 14c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 150:	82 36       	cpi	r24, 0x62	; 98
 152:	09 f4       	brne	.+2      	; 0x156 <__vector_13+0x2e>
 154:	4a c0       	rjmp	.+148    	; 0x1ea <__vector_13+0xc2>
 156:	28 f4       	brcc	.+10     	; 0x162 <__vector_13+0x3a>
 158:	8c 34       	cpi	r24, 0x4C	; 76
 15a:	e1 f0       	breq	.+56     	; 0x194 <__vector_13+0x6c>
 15c:	82 35       	cpi	r24, 0x52	; 82
 15e:	51 f0       	breq	.+20     	; 0x174 <__vector_13+0x4c>
 160:	61 c0       	rjmp	.+194    	; 0x224 <__vector_13+0xfc>
 162:	8d 36       	cpi	r24, 0x6D	; 109
 164:	39 f1       	breq	.+78     	; 0x1b4 <__vector_13+0x8c>
 166:	83 37       	cpi	r24, 0x73	; 115
 168:	09 f4       	brne	.+2      	; 0x16c <__vector_13+0x44>
 16a:	4f c0       	rjmp	.+158    	; 0x20a <__vector_13+0xe2>
 16c:	86 36       	cpi	r24, 0x66	; 102
 16e:	09 f0       	breq	.+2      	; 0x172 <__vector_13+0x4a>
 170:	59 c0       	rjmp	.+178    	; 0x224 <__vector_13+0xfc>
 172:	2b c0       	rjmp	.+86     	; 0x1ca <__vector_13+0xa2>
 174:	85 b3       	in	r24, 0x15	; 21
 176:	89 60       	ori	r24, 0x09	; 9
 178:	85 bb       	out	0x15, r24	; 21
 17a:	85 b3       	in	r24, 0x15	; 21
 17c:	89 7f       	andi	r24, 0xF9	; 249
 17e:	85 bb       	out	0x15, r24	; 21
 180:	88 e8       	ldi	r24, 0x88	; 136
 182:	93 e1       	ldi	r25, 0x13	; 19
 184:	99 bd       	out	0x29, r25	; 41
 186:	88 bd       	out	0x28, r24	; 40
 188:	9b bd       	out	0x2b, r25	; 43
 18a:	8a bd       	out	0x2a, r24	; 42
 18c:	82 e5       	ldi	r24, 0x52	; 82
 18e:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 192:	49 c0       	rjmp	.+146    	; 0x226 <__vector_13+0xfe>
 194:	85 b3       	in	r24, 0x15	; 21
 196:	86 60       	ori	r24, 0x06	; 6
 198:	85 bb       	out	0x15, r24	; 21
 19a:	85 b3       	in	r24, 0x15	; 21
 19c:	86 7f       	andi	r24, 0xF6	; 246
 19e:	85 bb       	out	0x15, r24	; 21
 1a0:	88 e8       	ldi	r24, 0x88	; 136
 1a2:	93 e1       	ldi	r25, 0x13	; 19
 1a4:	99 bd       	out	0x29, r25	; 41
 1a6:	88 bd       	out	0x28, r24	; 40
 1a8:	9b bd       	out	0x2b, r25	; 43
 1aa:	8a bd       	out	0x2a, r24	; 42
 1ac:	8c e4       	ldi	r24, 0x4C	; 76
 1ae:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 1b2:	39 c0       	rjmp	.+114    	; 0x226 <__vector_13+0xfe>
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8f 60       	ori	r24, 0x0F	; 15
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	19 bc       	out	0x29, r1	; 41
 1bc:	18 bc       	out	0x28, r1	; 40
 1be:	1b bc       	out	0x2b, r1	; 43
 1c0:	1a bc       	out	0x2a, r1	; 42
 1c2:	80 e3       	ldi	r24, 0x30	; 48
 1c4:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 1c8:	2e c0       	rjmp	.+92     	; 0x226 <__vector_13+0xfe>
 1ca:	85 b3       	in	r24, 0x15	; 21
 1cc:	85 60       	ori	r24, 0x05	; 5
 1ce:	85 bb       	out	0x15, r24	; 21
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	85 7f       	andi	r24, 0xF5	; 245
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	88 e8       	ldi	r24, 0x88	; 136
 1d8:	93 e1       	ldi	r25, 0x13	; 19
 1da:	99 bd       	out	0x29, r25	; 41
 1dc:	88 bd       	out	0x28, r24	; 40
 1de:	9b bd       	out	0x2b, r25	; 43
 1e0:	8a bd       	out	0x2a, r24	; 42
 1e2:	86 e6       	ldi	r24, 0x66	; 102
 1e4:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 1e8:	1e c0       	rjmp	.+60     	; 0x226 <__vector_13+0xfe>
 1ea:	85 b3       	in	r24, 0x15	; 21
 1ec:	8a 60       	ori	r24, 0x0A	; 10
 1ee:	85 bb       	out	0x15, r24	; 21
 1f0:	85 b3       	in	r24, 0x15	; 21
 1f2:	8a 7f       	andi	r24, 0xFA	; 250
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	88 e8       	ldi	r24, 0x88	; 136
 1f8:	93 e1       	ldi	r25, 0x13	; 19
 1fa:	99 bd       	out	0x29, r25	; 41
 1fc:	88 bd       	out	0x28, r24	; 40
 1fe:	9b bd       	out	0x2b, r25	; 43
 200:	8a bd       	out	0x2a, r24	; 42
 202:	82 e6       	ldi	r24, 0x62	; 98
 204:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 208:	0e c0       	rjmp	.+28     	; 0x226 <__vector_13+0xfe>
 20a:	85 b3       	in	r24, 0x15	; 21
 20c:	8f 60       	ori	r24, 0x0F	; 15
 20e:	85 bb       	out	0x15, r24	; 21
 210:	88 e8       	ldi	r24, 0x88	; 136
 212:	93 e1       	ldi	r25, 0x13	; 19
 214:	99 bd       	out	0x29, r25	; 41
 216:	88 bd       	out	0x28, r24	; 40
 218:	9b bd       	out	0x2b, r25	; 43
 21a:	8a bd       	out	0x2a, r24	; 42
 21c:	83 e7       	ldi	r24, 0x73	; 115
 21e:	0e 94 80 00 	call	0x100	; 0x100 <LCD_write>
 222:	01 c0       	rjmp	.+2      	; 0x226 <__vector_13+0xfe>
 224:	1b ba       	out	0x1b, r1	; 27
 226:	ff 91       	pop	r31
 228:	ef 91       	pop	r30
 22a:	bf 91       	pop	r27
 22c:	af 91       	pop	r26
 22e:	9f 91       	pop	r25
 230:	8f 91       	pop	r24
 232:	7f 91       	pop	r23
 234:	6f 91       	pop	r22
 236:	5f 91       	pop	r21
 238:	4f 91       	pop	r20
 23a:	3f 91       	pop	r19
 23c:	2f 91       	pop	r18
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <main>:
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	8a bb       	out	0x1a, r24	; 26
 24c:	84 bb       	out	0x14, r24	; 20
 24e:	81 b3       	in	r24, 0x11	; 17
 250:	80 63       	ori	r24, 0x30	; 48
 252:	81 bb       	out	0x11, r24	; 17
 254:	80 b5       	in	r24, 0x20	; 32
 256:	86 68       	ori	r24, 0x86	; 134
 258:	80 bd       	out	0x20, r24	; 32
 25a:	87 e6       	ldi	r24, 0x67	; 103
 25c:	89 b9       	out	0x09, r24	; 9
 25e:	8a b1       	in	r24, 0x0a	; 10
 260:	80 69       	ori	r24, 0x90	; 144
 262:	8a b9       	out	0x0a, r24	; 10
 264:	80 e1       	ldi	r24, 0x10	; 16
 266:	97 e2       	ldi	r25, 0x27	; 39
 268:	97 bd       	out	0x27, r25	; 39
 26a:	86 bd       	out	0x26, r24	; 38
 26c:	86 b5       	in	r24, 0x26	; 38
 26e:	97 b5       	in	r25, 0x27	; 39
 270:	9b bd       	out	0x2b, r25	; 43
 272:	8a bd       	out	0x2a, r24	; 42
 274:	86 b5       	in	r24, 0x26	; 38
 276:	97 b5       	in	r25, 0x27	; 39
 278:	99 bd       	out	0x29, r25	; 41
 27a:	88 bd       	out	0x28, r24	; 40
 27c:	8f b5       	in	r24, 0x2f	; 47
 27e:	82 6f       	ori	r24, 0xF2	; 242
 280:	8f bd       	out	0x2f, r24	; 47
 282:	8e b5       	in	r24, 0x2e	; 46
 284:	8a 61       	ori	r24, 0x1A	; 26
 286:	8e bd       	out	0x2e, r24	; 46
 288:	78 94       	sei
 28a:	0e 94 52 00 	call	0xa4	; 0xa4 <init_LCD>
 28e:	ff cf       	rjmp	.-2      	; 0x28e <main+0x46>

00000290 <_exit>:
 290:	f8 94       	cli

00000292 <__stop_program>:
 292:	ff cf       	rjmp	.-2      	; 0x292 <__stop_program>
